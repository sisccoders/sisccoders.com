{"version":3,"file":"react-tooltip.min.mjs","sources":["../src/utils/handle-style.ts","../src/utils/debounce.ts","../src/components/TooltipProvider/TooltipProvider.tsx","../src/components/TooltipProvider/TooltipWrapper.tsx","../src/utils/use-isomorphic-layout-effect.ts","../src/utils/get-scroll-parent.ts","../src/utils/compute-positions.ts","../src/components/Tooltip/Tooltip.tsx","../src/components/TooltipContent/TooltipContent.tsx","../src/components/TooltipController/TooltipController.tsx","../src/index.tsx"],"sourcesContent":["// This is the ID for the core styles of ReactTooltip\nconst REACT_TOOLTIP_CORE_STYLES_ID = 'react-tooltip-core-styles'\n// This is the ID for the visual styles of ReactTooltip\nconst REACT_TOOLTIP_BASE_STYLES_ID = 'react-tooltip-base-styles'\n\nconst injected = {\n  core: false,\n  base: false,\n}\n\nfunction injectStyle({\n  css,\n  id = REACT_TOOLTIP_BASE_STYLES_ID,\n  type = 'base',\n  ref,\n}: {\n  css: string\n  id?: string\n  type?: 'core' | 'base'\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref?: any\n}) {\n  if (!css || typeof document === 'undefined' || injected[type]) {\n    return\n  }\n\n  if (\n    type === 'core' &&\n    typeof process !== 'undefined' && // this validation prevents docs from breaking even with `process?`\n    process?.env?.REACT_TOOLTIP_DISABLE_CORE_STYLES\n  ) {\n    return\n  }\n\n  if (\n    type !== 'base' &&\n    typeof process !== 'undefined' && // this validation prevents docs from breaking even with `process?`\n    process?.env?.REACT_TOOLTIP_DISABLE_BASE_STYLES\n  ) {\n    return\n  }\n\n  if (type === 'core') {\n    // eslint-disable-next-line no-param-reassign\n    id = REACT_TOOLTIP_CORE_STYLES_ID\n  }\n\n  if (!ref) {\n    // eslint-disable-next-line no-param-reassign\n    ref = {}\n  }\n  const { insertAt } = ref\n\n  if (document.getElementById(id)) {\n    // this should never happen because of `injected[type]`\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `[react-tooltip] Element with id '${id}' already exists. Call \\`removeStyle()\\` first`,\n      )\n    }\n    return\n  }\n\n  const head = document.head || document.getElementsByTagName('head')[0]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const style: any = document.createElement('style')\n  style.id = id\n  style.type = 'text/css'\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild)\n    } else {\n      head.appendChild(style)\n    }\n  } else {\n    head.appendChild(style)\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css\n  } else {\n    style.appendChild(document.createTextNode(css))\n  }\n\n  injected[type] = true\n}\n\n/**\n * @deprecated Use the `disableStyleInjection` tooltip prop instead.\n * See https://react-tooltip.com/docs/examples/styling#disabling-reacttooltip-css\n */\nfunction removeStyle({\n  type = 'base',\n  id = REACT_TOOLTIP_BASE_STYLES_ID,\n}: {\n  type?: 'core' | 'base'\n  id?: string\n} = {}) {\n  if (!injected[type]) {\n    return\n  }\n\n  if (type === 'core') {\n    // eslint-disable-next-line no-param-reassign\n    id = REACT_TOOLTIP_CORE_STYLES_ID\n  }\n\n  const style = document.getElementById(id)\n  if (style?.tagName === 'style') {\n    style?.remove()\n  } else if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `[react-tooltip] Failed to remove 'style' element with id '${id}'. Call \\`injectStyle()\\` first`,\n    )\n  }\n\n  injected[type] = false\n}\n\nexport { injectStyle, removeStyle }\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: boolean) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's not need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n}\n\nexport default debounce\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n","import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n","import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","const isScrollable = (node: Element) => {\n  if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n    return false\n  }\n  const style = getComputedStyle(node)\n  return ['overflow', 'overflow-x', 'overflow-y'].some((propertyName) => {\n    const value = style.getPropertyValue(propertyName)\n    return value === 'auto' || value === 'scroll'\n  })\n}\n\nexport const getScrollParent = (node: Element | null) => {\n  if (!node) {\n    return null\n  }\n  let currentParent = node.parentElement\n  while (currentParent) {\n    if (isScrollable(currentParent)) {\n      return currentParent\n    }\n    currentParent = currentParent.parentElement\n  }\n  return document.scrollingElement || document.documentElement\n}\n","import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n  border,\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px`, border }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const borderSide = border && {\n        borderBottom: border,\n        borderRight: border,\n      }\n\n      let borderWidth = 0\n      if (border) {\n        const match = `${border}`.match(/(\\d+)px/)\n        if (match?.[1]) {\n          borderWidth = Number(match[1])\n        } else {\n          /**\n           * this means `border` was set without `width`, or non-px value\n           */\n          borderWidth = 1\n        }\n      }\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        ...borderSide,\n        [staticSide]: `-${4 + borderWidth}px`,\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport { autoUpdate } from '@floating-ui/dom'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { getScrollParent } from 'utils/get-scroll-parent'\nimport { computeTooltipPosition } from 'utils/compute-positions'\nimport coreStyles from './core-styles.module.css'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n  border,\n  opacity,\n  arrowColor,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n      border,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n  const updateTooltipPosition = useCallback(() => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n      border,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }, [\n    show,\n    activeAnchor,\n    content,\n    externalStyles,\n    place,\n    offset,\n    positionStrategy,\n    position,\n    float,\n  ])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    const handleScrollResize = () => {\n      handleShow(false)\n    }\n\n    const anchorScrollParent = getScrollParent(activeAnchor)\n    const tooltipScrollParent = getScrollParent(tooltipRef.current)\n\n    if (closeOnScroll) {\n      window.addEventListener('scroll', handleScrollResize)\n      anchorScrollParent?.addEventListener('scroll', handleScrollResize)\n      tooltipScrollParent?.addEventListener('scroll', handleScrollResize)\n    }\n    let updateTooltipCleanup: null | (() => void) = null\n    if (closeOnResize) {\n      window.addEventListener('resize', handleScrollResize)\n    } else if (activeAnchor && tooltipRef.current) {\n      updateTooltipCleanup = autoUpdate(\n        activeAnchor as HTMLElement,\n        tooltipRef.current as HTMLElement,\n        updateTooltipPosition,\n        {\n          ancestorResize: true,\n          elementResize: true,\n          layoutShift: true,\n        },\n      )\n    }\n\n    const handleEsc = (event: KeyboardEvent) => {\n      if (event.key !== 'Escape') {\n        return\n      }\n      handleShow(false)\n    }\n\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (closeOnScroll) {\n        window.removeEventListener('scroll', handleScrollResize)\n        anchorScrollParent?.removeEventListener('scroll', handleScrollResize)\n        tooltipScrollParent?.removeEventListener('scroll', handleScrollResize)\n      }\n      if (closeOnResize) {\n        window.removeEventListener('resize', handleScrollResize)\n      } else {\n        updateTooltipCleanup?.()\n      }\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [\n    activeAnchor,\n    updateTooltipPosition,\n    rendered,\n    anchorRefs,\n    anchorsBySelect,\n    closeOnEsc,\n    events,\n  ])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              if (tooltipShowDelayTimerRef.current) {\n                clearTimeout(tooltipShowDelayTimerRef.current)\n              }\n              if (tooltipHideDelayTimerRef.current) {\n                clearTimeout(tooltipHideDelayTimerRef.current)\n              }\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [updateTooltipPosition])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = !hidden && content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        coreStyles['tooltip'],\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          'react-tooltip__show': canShow,\n          [coreStyles['show']]: canShow,\n          [coreStyles['fixed']]: positionStrategy === 'fixed',\n          [coreStyles['clickable']]: clickable,\n        },\n      )}\n      style={{\n        ...externalStyles,\n        ...inlineStyles,\n        opacity: opacity !== undefined && canShow ? opacity : undefined,\n      }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames(\n          'react-tooltip-arrow',\n          coreStyles['arrow'],\n          styles['arrow'],\n          classNameArrow,\n          {\n            /**\n             * changed from dash `no-arrow` to camelcase because of:\n             * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n             */\n            [coreStyles['noArrow']]: noArrow,\n          },\n        )}\n        style={{\n          ...inlineArrowStyles,\n          background: arrowColor\n            ? `linear-gradient(to right bottom, transparent 50%, ${arrowColor} 50%)`\n            : undefined,\n        }}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  style,\n  position,\n  isOpen,\n  disableStyleInjection = false,\n  border,\n  opacity,\n  arrowColor,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipHidden, setTooltipHidden] = useState(hidden)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  const styleInjectionRef = useRef(disableStyleInjection)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n      hidden: (value) => {\n        setTooltipHidden(value === null ? hidden : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    setTooltipVariant(variant)\n  }, [variant])\n\n  useEffect(() => {\n    setTooltipOffset(offset)\n  }, [offset])\n\n  useEffect(() => {\n    setTooltipDelayShow(delayShow)\n  }, [delayShow])\n\n  useEffect(() => {\n    setTooltipDelayHide(delayHide)\n  }, [delayHide])\n\n  useEffect(() => {\n    setTooltipFloat(float)\n  }, [float])\n\n  useEffect(() => {\n    setTooltipHidden(hidden)\n  }, [hidden])\n\n  useEffect(() => {\n    setTooltipPositionStrategy(positionStrategy)\n  }, [positionStrategy])\n\n  useEffect(() => {\n    if (styleInjectionRef.current === disableStyleInjection) {\n      return\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.warn('[react-tooltip] Do not change `disableStyleInjection` dynamically.')\n    }\n  }, [disableStyleInjection])\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      window.dispatchEvent(\n        new CustomEvent('react-tooltip-inject-styles', {\n          detail: {\n            disableCore: disableStyleInjection === 'core',\n            disableBase: disableStyleInjection,\n          },\n        }),\n      )\n    }\n  }, [])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${selector}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return\n    }\n    if (style?.border) {\n      // eslint-disable-next-line no-console\n      console.warn('[react-tooltip] Do not set `style.border`. Use `border` prop instead.')\n    }\n    if (border && !CSS.supports('border', `${border}`)) {\n      // eslint-disable-next-line no-console\n      console.warn(`[react-tooltip] \"${border}\" is not a valid \\`border\\`.`)\n    }\n    if (style?.opacity) {\n      // eslint-disable-next-line no-console\n      console.warn('[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.')\n    }\n    if (opacity && !CSS.supports('opacity', `${opacity}`)) {\n      // eslint-disable-next-line no-console\n      console.warn(`[react-tooltip] \"${opacity}\" is not a valid \\`opacity\\`.`)\n    }\n  }, [])\n\n  /**\n   * content priority: children < render or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    const rendered = render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode\n    renderedContent = rendered ? (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {rendered}\n      </div>\n    ) : null\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    hidden: tooltipHidden,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    closeOnScroll,\n    closeOnResize,\n    style,\n    position,\n    isOpen,\n    border,\n    opacity,\n    arrowColor,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n","import './tokens.css'\n\nimport { injectStyle } from 'utils/handle-style'\n\nimport type {\n  ChildrenType,\n  DataAttribute,\n  EventsType,\n  PlacesType,\n  PositionStrategy,\n  VariantType,\n  WrapperType,\n  IPosition,\n  Middleware,\n} from './components/Tooltip/TooltipTypes'\nimport type { ITooltipController } from './components/TooltipController/TooltipControllerTypes'\nimport type { ITooltipWrapper } from './components/TooltipProvider/TooltipProviderTypes'\n\n// those content will be replaced in build time with the `react-tooltip.css` builded content\nconst TooltipCoreStyles = 'react-tooltip-core-css-placeholder'\nconst TooltipStyles = 'react-tooltip-css-placeholder'\n\nif (typeof window !== 'undefined') {\n  window.addEventListener('react-tooltip-inject-styles', ((\n    event: CustomEvent<{ disableCore: boolean; disableBase: boolean }>,\n  ) => {\n    if (!event.detail.disableCore) {\n      injectStyle({ css: TooltipCoreStyles, type: 'core' })\n    }\n    if (!event.detail.disableBase) {\n      injectStyle({ css: TooltipStyles, type: 'base' })\n    }\n  }) as EventListener)\n}\n\nexport { TooltipController as Tooltip } from './components/TooltipController'\nexport { TooltipProvider, TooltipWrapper } from './components/TooltipProvider'\nexport type {\n  ChildrenType,\n  DataAttribute,\n  EventsType,\n  PlacesType,\n  PositionStrategy,\n  VariantType,\n  WrapperType,\n  ITooltipController as ITooltip,\n  ITooltipWrapper,\n  IPosition,\n  Middleware,\n}\n\nexport { removeStyle } from './utils/handle-style'\n"],"names":["REACT_TOOLTIP_CORE_STYLES_ID","REACT_TOOLTIP_BASE_STYLES_ID","injected","core","base","injectStyle","css","id","type","ref","document","process","_a","env","REACT_TOOLTIP_DISABLE_CORE_STYLES","_b","REACT_TOOLTIP_DISABLE_BASE_STYLES","insertAt","getElementById","console","warn","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","removeStyle","tagName","remove","debounce","func","wait","immediate","timeout","args","later","apply","this","setTimeout","clearTimeout","DEFAULT_TOOLTIP_ID","DEFAULT_CONTEXT_DATA","anchorRefs","Set","activeAnchor","current","attach","detach","setActiveAnchor","TooltipContext","createContext","getTooltipData","TooltipProvider","children","anchorRefMap","setAnchorRefMap","useState","activeAnchorMap","setActiveAnchorMap","tooltipId","refs","oldMap","tooltipRefs","forEach","add","delete","useCallback","context","useMemo","React","Provider","value","useTooltip","useContext","TooltipWrapper","className","place","content","html","variant","offset","wrapper","events","positionStrategy","delayShow","delayHide","anchorRef","useRef","useEffect","classNames","useIsomorphicLayoutEffect","window","useLayoutEffect","isScrollable","node","HTMLElement","SVGElement","getComputedStyle","some","propertyName","getPropertyValue","getScrollParent","currentParent","parentElement","scrollingElement","documentElement","computeTooltipPosition","async","elementReference","tooltipReference","tooltipArrowReference","offsetValue","strategy","middlewares","Number","flip","shift","padding","border","tooltipStyles","tooltipArrowStyles","middleware","push","arrow","element","computePosition","placement","then","x","y","middlewareData","styles","left","top","arrowX","arrowY","staticSide","right","bottom","split","borderSide","borderBottom","borderRight","borderWidth","match","Tooltip","classNameArrow","anchorId","anchorSelect","openOnClick","WrapperElement","float","hidden","noArrow","clickable","closeOnEsc","closeOnScroll","closeOnResize","externalStyles","position","afterShow","afterHide","contentWrapperRef","isOpen","setIsOpen","opacity","arrowColor","tooltipRef","tooltipArrowRef","tooltipShowDelayTimerRef","tooltipHideDelayTimerRef","actualPlacement","setActualPlacement","inlineStyles","setInlineStyles","inlineArrowStyles","setInlineArrowStyles","show","setShow","rendered","setRendered","wasShowing","lastFloatPosition","setProviderActiveAnchor","hoveringTooltip","anchorsBySelect","setAnchorsBySelect","mounted","shouldOpenOnClick","includes","handleShow","undefined","handleHideTooltipDelayed","delay","handleShowTooltip","event","target","currentTarget","isConnected","handleHideTooltip","handleTooltipPosition","getBoundingClientRect","width","height","computedStylesData","Object","keys","length","handleMouseMove","mouseEvent","mousePosition","clientX","clientY","handleClickTooltipAnchor","handleClickOutsideAnchors","querySelector","anchor","contains","debouncedHandleShowTooltip","debouncedHandleHideTooltip","updateTooltipPosition","elementRefs","anchorById","handleScrollResize","anchorScrollParent","tooltipScrollParent","addEventListener","updateTooltipCleanup","autoUpdate","ancestorResize","elementResize","layoutShift","handleEsc","key","enabledEvents","listener","handleMouseEnterTooltip","handleMouseLeaveTooltip","removeEventListener","selector","documentObserver","MutationObserver","mutationList","newAnchors","mutation","attributeName","getAttribute","removedNodes","call","elements","addedNodes","filter","nodeType","matches","flatMap","querySelectorAll","anchors","observe","body","childList","subtree","attributes","attributeFilter","disconnect","contentObserver","ResizeObserver","Array","from","canShow","role","coreStyles","coreStyles_show","coreStyles_fixed","coreStyles_clickable","coreStyles_noArrow","background","TooltipContent","dangerouslySetInnerHTML","__html","TooltipController","render","disableStyleInjection","tooltipContent","setTooltipContent","tooltipHtml","setTooltipHtml","tooltipPlace","setTooltipPlace","tooltipVariant","setTooltipVariant","tooltipOffset","setTooltipOffset","tooltipDelayShow","setTooltipDelayShow","tooltipDelayHide","setTooltipDelayHide","tooltipFloat","setTooltipFloat","tooltipHidden","setTooltipHidden","tooltipWrapper","setTooltipWrapper","tooltipEvents","setTooltipEvents","tooltipPositionStrategy","setTooltipPositionStrategy","styleInjectionRef","providerActiveAnchor","getDataAttributesFromAnchorElement","getAttributeNames","reduce","acc","name","startsWith","replace","applyAllDataAttributesFromAnchorElement","dataAttributes","handleDataAttributes","parsed","values","handler","entries","dispatchEvent","CustomEvent","detail","disableCore","disableBase","size","anchorElement","observer","observerConfig","CSS","supports","renderedContent","props"],"mappings":"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"}